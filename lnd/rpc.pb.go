// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package lnd

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoRequest) Reset()         { *m = GetInfoRequest{} }
func (m *GetInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfoRequest) ProtoMessage()    {}
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *GetInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoRequest.Unmarshal(m, b)
}
func (m *GetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoRequest.Merge(m, src)
}
func (m *GetInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetInfoRequest.Size(m)
}
func (m *GetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoRequest proto.InternalMessageInfo

type GetInfoResponse struct {
	/// The identity pubkey of the current node.
	IdentityPubkey string `protobuf:"bytes,1,opt,name=identity_pubkey,proto3" json:"identity_pubkey,omitempty"`
	/// If applicable, the alias of the current node, e.g. "bob"
	Alias string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	/// Number of pending channels
	NumPendingChannels uint32 `protobuf:"varint,3,opt,name=num_pending_channels,proto3" json:"num_pending_channels,omitempty"`
	/// Number of active channels
	NumActiveChannels uint32 `protobuf:"varint,4,opt,name=num_active_channels,proto3" json:"num_active_channels,omitempty"`
	/// Number of peers
	NumPeers uint32 `protobuf:"varint,5,opt,name=num_peers,proto3" json:"num_peers,omitempty"`
	/// The node's current view of the height of the best block
	BlockHeight uint32 `protobuf:"varint,6,opt,name=block_height,proto3" json:"block_height,omitempty"`
	/// The node's current view of the hash of the best block
	BlockHash string `protobuf:"bytes,8,opt,name=block_hash,proto3" json:"block_hash,omitempty"`
	/// Whether the wallet's view is synced to the main chain
	SyncedToChain bool `protobuf:"varint,9,opt,name=synced_to_chain,proto3" json:"synced_to_chain,omitempty"`
	//*
	//Whether the current node is connected to testnet. This field is
	//deprecated and the network field should be used instead
	Testnet bool `protobuf:"varint,10,opt,name=testnet,proto3" json:"testnet,omitempty"` // Deprecated: Do not use.
	/// The URIs of the current node.
	Uris []string `protobuf:"bytes,12,rep,name=uris,proto3" json:"uris,omitempty"`
	/// Timestamp of the block best known to the wallet
	BestHeaderTimestamp int64 `protobuf:"varint,13,opt,name=best_header_timestamp,proto3" json:"best_header_timestamp,omitempty"`
	/// The version of the LND software that the node is running.
	Version string `protobuf:"bytes,14,opt,name=version,proto3" json:"version,omitempty"`
	/// Number of inactive channels
	NumInactiveChannels uint32 `protobuf:"varint,15,opt,name=num_inactive_channels,proto3" json:"num_inactive_channels,omitempty"`
	/// A list of active chains the node is connected to
	Chains               []*Chain `protobuf:"bytes,16,rep,name=chains,proto3" json:"chains,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoResponse) Reset()         { *m = GetInfoResponse{} }
func (m *GetInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetInfoResponse) ProtoMessage()    {}
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *GetInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoResponse.Unmarshal(m, b)
}
func (m *GetInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoResponse.Merge(m, src)
}
func (m *GetInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetInfoResponse.Size(m)
}
func (m *GetInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoResponse proto.InternalMessageInfo

func (m *GetInfoResponse) GetIdentityPubkey() string {
	if m != nil {
		return m.IdentityPubkey
	}
	return ""
}

func (m *GetInfoResponse) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *GetInfoResponse) GetNumPendingChannels() uint32 {
	if m != nil {
		return m.NumPendingChannels
	}
	return 0
}

func (m *GetInfoResponse) GetNumActiveChannels() uint32 {
	if m != nil {
		return m.NumActiveChannels
	}
	return 0
}

func (m *GetInfoResponse) GetNumPeers() uint32 {
	if m != nil {
		return m.NumPeers
	}
	return 0
}

func (m *GetInfoResponse) GetBlockHeight() uint32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *GetInfoResponse) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *GetInfoResponse) GetSyncedToChain() bool {
	if m != nil {
		return m.SyncedToChain
	}
	return false
}

// Deprecated: Do not use.
func (m *GetInfoResponse) GetTestnet() bool {
	if m != nil {
		return m.Testnet
	}
	return false
}

func (m *GetInfoResponse) GetUris() []string {
	if m != nil {
		return m.Uris
	}
	return nil
}

func (m *GetInfoResponse) GetBestHeaderTimestamp() int64 {
	if m != nil {
		return m.BestHeaderTimestamp
	}
	return 0
}

func (m *GetInfoResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *GetInfoResponse) GetNumInactiveChannels() uint32 {
	if m != nil {
		return m.NumInactiveChannels
	}
	return 0
}

func (m *GetInfoResponse) GetChains() []*Chain {
	if m != nil {
		return m.Chains
	}
	return nil
}

type Chain struct {
	/// The blockchain the node is on (eg bitcoin, litecoin)
	Chain string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	/// The network the node is on (eg regtest, testnet, mainnet)
	Network              string   `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chain) Reset()         { *m = Chain{} }
func (m *Chain) String() string { return proto.CompactTextString(m) }
func (*Chain) ProtoMessage()    {}
func (*Chain) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}

func (m *Chain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chain.Unmarshal(m, b)
}
func (m *Chain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chain.Marshal(b, m, deterministic)
}
func (m *Chain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chain.Merge(m, src)
}
func (m *Chain) XXX_Size() int {
	return xxx_messageInfo_Chain.Size(m)
}
func (m *Chain) XXX_DiscardUnknown() {
	xxx_messageInfo_Chain.DiscardUnknown(m)
}

var xxx_messageInfo_Chain proto.InternalMessageInfo

func (m *Chain) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

func (m *Chain) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func init() {
	proto.RegisterType((*GetInfoRequest)(nil), "lnd.GetInfoRequest")
	proto.RegisterType((*GetInfoResponse)(nil), "lnd.GetInfoResponse")
	proto.RegisterType((*Chain)(nil), "lnd.Chain")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 399 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0xc9, 0xa6, 0xff, 0x32, 0xdb, 0xdd, 0x56, 0xb3, 0x45, 0xb2, 0xd0, 0x0a, 0x45, 0x39,
	0xe5, 0x54, 0xa1, 0x82, 0xe0, 0xc4, 0x05, 0x90, 0x10, 0x08, 0x71, 0xf0, 0x0b, 0x44, 0x69, 0x32,
	0x6c, 0xac, 0xa6, 0xe3, 0x10, 0xbb, 0x8b, 0xfa, 0x40, 0xbc, 0x27, 0xb2, 0x93, 0xb2, 0xdb, 0x2a,
	0xb7, 0x7c, 0xbf, 0x6f, 0x6c, 0xcf, 0x4c, 0x3e, 0x88, 0xda, 0xa6, 0x58, 0x37, 0xad, 0xb6, 0x1a,
	0xc3, 0x9a, 0xcb, 0x64, 0x09, 0xb7, 0x5f, 0xc9, 0x7e, 0xe3, 0x5f, 0x5a, 0xd2, 0xef, 0x03, 0x19,
	0x9b, 0xfc, 0x1d, 0xc1, 0xe2, 0x3f, 0x32, 0x8d, 0x66, 0x43, 0x98, 0xc2, 0x42, 0x95, 0xc4, 0x56,
	0xd9, 0x63, 0xd6, 0x1c, 0xb6, 0x3b, 0x3a, 0x8a, 0x20, 0x0e, 0xd2, 0x48, 0x5e, 0x62, 0x5c, 0xc1,
	0x38, 0xaf, 0x55, 0x6e, 0xc4, 0x95, 0xf7, 0x3b, 0x81, 0x1b, 0x58, 0xf1, 0x61, 0x9f, 0x35, 0xc4,
	0xa5, 0xe2, 0x87, 0xac, 0xa8, 0x72, 0x66, 0xaa, 0x8d, 0x08, 0xe3, 0x20, 0xbd, 0x91, 0x83, 0x1e,
	0xbe, 0x81, 0x3b, 0xc7, 0xf3, 0xc2, 0xaa, 0x47, 0x7a, 0x3a, 0x32, 0xf2, 0x47, 0x86, 0x2c, 0xbc,
	0x87, 0xa8, 0xbb, 0x89, 0x5a, 0x23, 0xc6, 0xbe, 0xee, 0x09, 0x60, 0x02, 0xf3, 0x6d, 0xad, 0x8b,
	0x5d, 0x56, 0x91, 0x7a, 0xa8, 0xac, 0x98, 0xf8, 0x82, 0x33, 0x86, 0xaf, 0x01, 0x7a, 0x9d, 0x9b,
	0x4a, 0xcc, 0xfc, 0x08, 0xcf, 0x88, 0xdb, 0x83, 0x39, 0x72, 0x41, 0x65, 0x66, 0xb5, 0x7b, 0x57,
	0xb1, 0x88, 0xe2, 0x20, 0x9d, 0xc9, 0x4b, 0x8c, 0xf7, 0x30, 0xb5, 0x64, 0x2c, 0x93, 0x15, 0xe0,
	0x2a, 0x3e, 0x5d, 0x89, 0x40, 0x9e, 0x10, 0x22, 0x8c, 0x0e, 0xad, 0x32, 0x62, 0x1e, 0x87, 0x69,
	0x24, 0xfd, 0x37, 0xbe, 0x83, 0x97, 0x5b, 0x32, 0x36, 0xab, 0x28, 0x2f, 0xa9, 0xcd, 0xac, 0xda,
	0x93, 0xb1, 0xf9, 0xbe, 0x11, 0x37, 0x71, 0x90, 0x86, 0x72, 0xd8, 0x44, 0x01, 0xd3, 0x47, 0x6a,
	0x8d, 0xd2, 0x2c, 0x6e, 0x7d, 0xbb, 0x27, 0xe9, 0xee, 0x73, 0xc3, 0x2b, 0xbe, 0xdc, 0xe0, 0xc2,
	0x0f, 0x3e, 0x6c, 0x62, 0x02, 0x13, 0x3f, 0x80, 0x11, 0xcb, 0x38, 0x4c, 0xaf, 0x37, 0xb0, 0xae,
	0xb9, 0x5c, 0x7f, 0x76, 0x48, 0xf6, 0xce, 0xf7, 0xd1, 0xec, 0x7a, 0x39, 0x4f, 0x3e, 0xc0, 0xd8,
	0x63, 0xf7, 0xcb, 0xbb, 0x55, 0x74, 0x91, 0xe8, 0x84, 0x6b, 0x8c, 0xc9, 0xfe, 0xd1, 0xed, 0xae,
	0x8f, 0xc2, 0x49, 0x6e, 0x3e, 0x42, 0xf8, 0xe3, 0xe7, 0x17, 0x7c, 0x0f, 0xd3, 0x3e, 0x66, 0x78,
	0xe7, 0x1f, 0x39, 0xcf, 0xe1, 0xab, 0xd5, 0x39, 0xec, 0x92, 0x98, 0xbc, 0xd8, 0x4e, 0x7c, 0x7a,
	0xdf, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x52, 0xf4, 0xdf, 0xe8, 0xca, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LNDClient is the client API for LND service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LNDClient interface {
	GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error)
}

type lNDClient struct {
	cc *grpc.ClientConn
}

func NewLNDClient(cc *grpc.ClientConn) LNDClient {
	return &lNDClient{cc}
}

func (c *lNDClient) GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error) {
	out := new(GetInfoResponse)
	err := c.cc.Invoke(ctx, "/lnd.LND/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LNDServer is the server API for LND service.
type LNDServer interface {
	GetInfo(context.Context, *GetInfoRequest) (*GetInfoResponse, error)
}

// UnimplementedLNDServer can be embedded to have forward compatible implementations.
type UnimplementedLNDServer struct {
}

func (*UnimplementedLNDServer) GetInfo(ctx context.Context, req *GetInfoRequest) (*GetInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}

func RegisterLNDServer(s *grpc.Server, srv LNDServer) {
	s.RegisterService(&_LND_serviceDesc, srv)
}

func _LND_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LNDServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lnd.LND/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LNDServer).GetInfo(ctx, req.(*GetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LND_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lnd.LND",
	HandlerType: (*LNDServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _LND_GetInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}
